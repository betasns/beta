<?php

/*
 *---------------------------------------------------------------
 * 应用程序环境
 *---------------------------------------------------------------
 *
 * 可以根据当前环境载入不同配置
 * 环境设置还会影响到诸如错误报告和日志等
 *
 * 可以设置为下面几个用法: development, testing, production
 *
 * 注意: 如果改变此项, 同时也改变了下面的 error_reporting()
 *
 */
	define('ENVIRONMENT', 'development');
/*
 *---------------------------------------------------------------
 * 错误报告
 *---------------------------------------------------------------
 *
 * 不同的环境需要不同级别的错误报告
 * 默认情况下, development 将显示错误, 但是testing 和 production 将隐藏它们
 */

if (defined('ENVIRONMENT')){
	switch (ENVIRONMENT){
		case 'development':
			error_reporting(E_ALL);
		break;
	
		case 'testing':
		case 'production':
			error_reporting(0);
		break;

		default:
			exit('应用程序环境设置不正确.');
	}
}

/*
 *---------------------------------------------------------------
 * 框架文件目录
 *---------------------------------------------------------------
 *
 * 此变量必须包含 "system" 文件夹名称
 * 如果文件夹不在当前目录下, include 此路径
 *
 */
	$system_path = 'system';

/*
 *---------------------------------------------------------------
 * 应用程序路径
 *---------------------------------------------------------------
 *
 * 如果希望前端控制器使用不同的 "application" 文件夹, 那么可以在此设置
 * 文件夹可以重命名或者放在服务器的任意位置, 如果这样, 使用完整的服务器路径
 *
 * 没有结尾的斜线!!!
 *
 */
	$application_folder = 'admin';

/*
 * --------------------------------------------------------------------
 * 默认控制器
 * --------------------------------------------------------------------
 *
 * 通常情况下在 routes.php 文件中设置默认控制器
 * 但是, 可以通过硬编码此处的特定控制器类/函数强制使用自定义路由
 * 对于大多数应用程序, 不需要在此处设置路由
 * 但在共享CI端口情况下, 可能需要覆盖某个特定前端控制器中的标准路由, 这时它将提供一种选择
 *
 * 重要提示:  如果在此设置路由, 则不能调用其它控制器
 * 从本质上讲, 这种优先权限制应用程序到一个特定控制器
 * 如果需要通过 URI 动态调用函数则保留函数名为空
 * 
 * 取消下面 $routing 数组的注释来启用此功能
 *
 */
	// 目录名(相对于 "controllers" 文件夹)
	// 如果你的控制器不在你的 "controllers" 文件夹下的子目录中的话, 请留空
	// $routing['directory'] = '';

	// 控制器类文件名
	// $routing['controller'] = '';

	// 控制器函数名
	// $routing['function']	= '';


/*
 * -------------------------------------------------------------------
 *  自定义配置值
 * -------------------------------------------------------------------
 *
 * 下面的 $assign_to_config 数组将在初始化时动态地传递给配置类
 * 可以设置自定义配置项或者覆盖 config.php 文件中的任何默认配置值
 * 这可以方便的允许你在多个前端控制器文件中使用不同的配置值共享一个应用程序
 *
 * 取消下面 $assign_to_config 数组的注释来启用此功能
 *
 */
	// $assign_to_config['name_of_config_item'] = 'value of config item';



// --------------------------------------------------------------------
// 用户可配置选项结束, 此行以下不要擅自编辑
// --------------------------------------------------------------------

/*
 * ---------------------------------------------------------------
 *  为增加可靠性, 解析系统路径
 * ---------------------------------------------------------------
 */

	// 为 CLI(命令行界面) 请求设置正确的当前目录
	// STDIN 标识了当前是否是 CLI 环境
	if (defined('STDIN')){
		// __FILE__ 是当前文件的绝对路径
		// 改变当前的工作目录为当前文件所在的目录
		chdir(dirname(__FILE__));
	}

	// 获取框架路径: 绝对路径 + '/'
	if (realpath($system_path) !== FALSE){
		$system_path = realpath($system_path).'/';
	}

	// 确定框架路径是否含有最后的'/'
	$system_path = rtrim($system_path, '/').'/';

	// 判断框架路径是否正确
	if ( ! is_dir($system_path)){
		exit("系统文件夹路径设置不正确, 请打开下面的文件并修正: ".pathinfo(__FILE__, PATHINFO_BASENAME));
	}

/*
 * -------------------------------------------------------------------
 *  设置主路径常量
 * -------------------------------------------------------------------
 */
	// 当前文件名
	define('SELF', pathinfo(__FILE__, PATHINFO_BASENAME));

	// PHP 文件扩展名
	// 这个全局常量已经不赞成使用
	define('EXT', '.php');

	// 框架文件夹路径
	define('BASEPATH', str_replace("\\", "/", $system_path));

	// 当前文件(前端控制器)路径
	define('FCPATH', str_replace(SELF, '', __FILE__));

	// 系统文件夹名
	define('SYSDIR', trim(strrchr(trim(BASEPATH, '/'), '/'), '/'));

	// 应用程序文件夹路径
	if (is_dir($application_folder)){
		define('APPPATH', $application_folder.'/');
	}else {
		if ( ! is_dir(BASEPATH.$application_folder.'/')){
			exit("系统文件夹路径设置不正确, 请打开下面的文件并修正: ".SELF);
		}

		define('APPPATH', BASEPATH.$application_folder.'/');
	}

/*
 * --------------------------------------------------------------------
 * 载入自举文件(框架核心文件)
 * --------------------------------------------------------------------
 *
 */
require_once BASEPATH.'core/CodeIgniter.php';